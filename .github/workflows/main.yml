name: Build & Upload Android Debug APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Java (Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Ensure plugin deps present (before install)
        run: |
          npm pkg set dependencies["@capacitor/app"]="^5.0.0"
          npm pkg set dependencies["@capacitor/browser"]="^5.0.0"
          npm pkg set dependencies["@capacitor/geolocation"]="^5.0.0"
          npm pkg set dependencies["@capacitor/local-notifications"]="^5.0.0"
          npm pkg set dependencies["@capgo/capacitor-updater"]="^5"
          npm pkg set dependencies["@capacitor-community/background-geolocation"]="1.2.4"
          npm pkg delete dependencies["@capacitor-community/keep-awake"] || true
          rm -f package-lock.json


      - name: Install deps
        run: npm install

      - name: Build web
        run: npm run build

      - name: Zip web bundle
        run: |
          cd dist
          zip -r ../web-bundle-${{ github.run_number }}.zip .
          cd ..

      - name: Write version.json
        run: |
          cat > version.json <<EOF
          {
            "bundleVersion": "${{ github.run_number }}",
            "bundleUrl": "https://jeroencooremans.com/dispatch/app/web-bundle-${{ github.run_number }}.zip",
            "minNativeVersion": "1.0.2",
            "apkUrl": "https://jeroencooremans.com/dispatch/app/DispatchTracking-latest.apk"
          }
          EOF

      - name: Prepare deploy folder
        run: |
          rm -rf deploy && mkdir deploy
          mv web-bundle-${{ github.run_number }}.zip deploy/
          mv version.json deploy/

            # --- DEBUG: toon waar je FTP-root écht staat ---
            
      - name: Debug FTPS root listing
        run: |
          set -x
          echo "== LIST / =="
          curl -v --ftp-ssl --user "u642982818.ftpdisp:Tasme2589Ta7xntkp!" \
            "ftp://185.224.138.88/" --disable-epsv --ftp-method nocwd --list-only || true

          echo "== LIST /public_html =="
          curl -v --ftp-ssl --user "u642982818.ftpdisp:Tasme2589Ta7xntkp!" \
            "ftp://185.224.138.88/public_html/" --disable-epsv --ftp-method nocwd --list-only || true

          echo "== LIST /domains =="
          curl -v --ftp-ssl --user "u642982818.ftpdisp:Tasme2589Ta7xntkp!" \
            "ftp://185.224.138.88/domains/" --disable-epsv --ftp-method nocwd --list-only || true

          echo "== LIST /domains/jeroencooremans.com/public_html =="
          curl -v --ftp-ssl --user "u642982818.ftpdisp:Tasme2589Ta7xntkp!" \
            "ftp://185.224.138.88/domains/jeroencooremans.com/public_html/" --disable-epsv --ftp-method nocwd --list-only || true

          echo "== LIST /domains/jeroencooremans.com/public_html/dispatch =="
          curl -v --ftp-ssl --user "u642982818.ftpdisp:Tasme2589Ta7xntkp!" \
            "ftp://185.224.138.88/domains/jeroencooremans.com/public_html/dispatch/" --disable-epsv --ftp-method nocwd --list-only || true

      # --- UPLOAD: kies exact één van de 2 server-dir varianten hieronder ---

      # Variant A) Als de FTP-home == /domains/jeroencooremans.com/public_html/
      # -> upload naar dispatch/app/ onder public_html
      # - name: Upload bundle + manifest (FTPS to Hostinger)
      #   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #   with:
      #     server: 185.224.138.88
      #     username: u642982818.ftpdisp
      #     password: Tasme2589Ta7xntkp!
      #     protocol: ftps
      #     port: 21
      #     local-dir: deploy/
      #     server-dir: dispatch/app/

      # Variant B) Als de FTP-home == /domains/jeroencooremans.com/public_html/dispatch/
      # -> upload alleen naar app/
      - name: Upload bundle + manifest (FTPS to Hostinger)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: 185.224.138.88
          username: u642982818.ftpdisp
          password: Tasme2589Ta7xntkp!
          protocol: ftps
          port: 21
          local-dir: deploy/
          server-dir: app/



      - name: Generate icons & splash (Android)
        run: |
          npx --yes @capacitor/assets@2 generate --android

      - name: Add/Sync Android (Capacitor CLI via npx)
        run: |
          npx --yes @capacitor/cli@5 add android || true
          npx --yes @capacitor/cli@5 sync android

      - name: Ensure manifest permissions (Internet, location, notifications, FGS)
        shell: bash
        run: |
          FILE="android/app/src/main/AndroidManifest.xml"
          add_perm() {
            local P="$1"
            if ! grep -q "android.permission.${P}" "$FILE"; then
              sed -i "s#</manifest>#  <uses-permission android:name=\"android.permission.${P}\" />\n</manifest>#g" "$FILE"
            fi
          }
          add_perm INTERNET
          add_perm ACCESS_COARSE_LOCATION
          add_perm ACCESS_FINE_LOCATION
          add_perm ACCESS_BACKGROUND_LOCATION
          add_perm FOREGROUND_SERVICE
          add_perm FOREGROUND_SERVICE_LOCATION
          add_perm WAKE_LOCK
          add_perm POST_NOTIFICATIONS
          add_perm RECEIVE_BOOT_COMPLETED

      - name: Patch BG plugin BuildConfig stubs
        shell: bash
        run: |
          PLUG="node_modules/@capacitor-community/background-geolocation/android/src/main/java/com/equimaps/capacitor_background_geolocation"
          mkdir -p "$PLUG"
          cat > "$PLUG/BuildConfig.java" <<'EOF'
          package com.equimaps.capacitor_background_geolocation;
          public final class BuildConfig { public static final boolean DEBUG = false; }
          EOF
          CAP="node_modules/@capacitor-community/background-geolocation/android/src/main/java/com/getcapacitor/android"
          mkdir -p "$CAP"
          cat > "$CAP/BuildConfig.java" <<'EOF'
          package com.getcapacitor.android;
          public final class BuildConfig { public static final boolean DEBUG = false; }
          EOF

      - name: Make gradle executable (Linux)
        run: chmod +x android/gradlew || true

      - name: Build APK (debug)
        working-directory: android
        run: ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DispatchTracking-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
